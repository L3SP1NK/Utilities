#!/bin/bash
clear
neofetch | ccze -A
HOSTNAME_COLOR=$(cat ~/.hostname_color)

function UPDATE_APT()
{
	apt clean -y
	apt autoclean -y
	apt autoremove --purge -y

	dpkg --configure -a
	apt --fix-broken install

	apt update
	apt upgrade -y --with-new-pkgs

	apt update
	apt dist-upgrade -y --ignore-hold

	apt update
	apt full-upgrade -y

	dpkg --configure -a
	apt --fix-broken install

	apt clean -y
	apt autoclean -y
	apt autoremove --purge -y

}

function UPDATE_NPM()
{
	npm audit
	npm doctor
	npm update
	cat /root/.npm/_logs/* | ccze -A
	mv -vf /root/.npm/_logs/* /root/*.json ~/.trash
}

WORKSPACE=/


function UPDATE_FLATPAK()
{
	flatpak list
	flatpak update
}

function UPDATE_GIT()
{
	cd ${WORKSPACE}
	for GIT_PATH in $(find ${WORKSPACE} -type d -name ".git")
		do
			cd ${GIT_PATH};
			echo -e "\n\e[34m\e[1m${GIT_PATH}\e[0m"
			cd ..
			git config pull.rebase false
			git stash
			git pull
			cd ${WORKSPACE}
		done
}

function UPDATE_KERNEL()
{
	if [[ ${HOSTNAME_COLOR} == "yellow" ]]
		then
			cp -vur /opt/FIRMWARE/linux-firmware/* /lib/firmware
			cp -vur /opt/FIRMWARE/unofficial-amdgpu-firmware-repo/amdgpu/* /lib/firmware/amdgpu
			update-initramfs -du
		else
			cp -vur /opt/FIRMWARE/linux-firmware/* /lib/firmware
			update-initramfs -du
	fi
}

echo -e "\n\e[35m\e[1m $(date +%H:%M:%S)\e[0m"
echo -e "\e[33m\e[1m $(apt list --installed | wc -l)\e[0m\e[33m Packages currently installed.\e[0m"
echo -e "\e[33m Updating\e[1m APT\e[0m\e[33m packages...\e[0m"
UPDATE_APT 2>/dev/null | ccze -A
echo -e "\e[32m Done !\e[0m\n"


which flatpak > /dev/null
if [[ ${?} -eq 0 ]]
	then
		echo -e "\n\e[35m\e[1m $(date +%H:%M:%S)\e[0m"
		echo -e "\e[33m\e[1m Flatpak\e[0m\e[33m is located at $(which flatpak).\e[0m"
		echo -e "\e[33m You are using\e[1m $(flatpak --version).\e[0m"
		UPDATE_FLATPAK
		echo -e "\e[32m Done !\e[0m\n"
else
		echo -e "\e[33m\e[1m Flatpak\e[0m\e[33m isn't installed.\e[0m"
fi

which npm > /dev/null
if [[ ${?} -eq 0 ]]
	then
		echo -e "\n\e[35m\e[1m $(date +%H:%M:%S)\e[0m"
		echo -e "\e[33m\e[1m NPM\e[0m\e[33m is located at $(which npm).\e[0m"
		echo -e "\e[33m Updating\e[1mNPM\e[0m\e[33m packages...\e[0m"
		UPDATE_NPM
		echo -e "\e[32m Done !\e[0m\n"
	else
		echo -e "\e[33m\e[1m NPM\e[0m\e[33m isn't installed.\e[0m"
fi

which git > /dev/null
if [[ ${?} -eq 0 ]]
	then
		echo -e "\n\e[35m\e[1m $(date +%H:%M:%S)\e[0m"
		echo -e "\e[33m\e[1m Git\e[0m\e[33m is located at $(which flatpak).\e[0m"
		echo -e "\e[33m Updating\e[1m GIT\e[0m\e[33m repositories...\e[0m"
		UPDATE_GIT
		echo -e "\e[32m Done !\e[0m\n"
	else
		echo -e "\e[33m\e[1m Git\e[0m\e[33m isn't installed.\e[0m"
fi

echo -e "\n\e[35m\e[1m $(date +%H:%M:%S)\e[0m"
echo -e "\e[33m Updating\e[1m kernel\e[0m\e[33m ...\e[0m"
UPDATE_KERNEL
echo -e "\e[32m Done !\e[0m\n"

echo -e "\e[32m Update finnished !\e[0m\n"
