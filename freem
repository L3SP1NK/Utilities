#!/bin/bash
## Empty swap space and caches.
## Empty the cache of the system and the following applications:
## - Molotov
## - Binance
## - Firefox

RESET_COLOR="\e[0m"
BOLD="\e[1m"
BLUE="\e[34m"
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"

USER_HOME="/home/lespink"

function CACHE_DIR()
{
	if [[ -d /root/.cache ]]
		then
			## Root
			echo -e "${YELLOW}Removing the ${BOLD}root ${RESET_COLOR}${YELLOW}cache directory...${RESET_COLOR}"
			rm -fr /root/.cache 2>/dev/null
	fi

	if [[ -d ${USER_HOME}/.cache ]]
		then
			## User
			echo -e "${YELLOW}Removing the ${BOLD}user ${RESET_COLOR}${YELLOW}cache directory...${RESET_COLOR}"
			rm -fr ${USER_HOME}/.cache 2>/dev/null
	fi

	if [[ -d ${USER_HOME}/.mozilla/firefox/*/cache ]]
		then
			## Mozilla
			echo -e "${YELLOW}Removing the ${BOLD}firefox ${RESET_COLOR}${YELLOW}cache directory...${RESET_COLOR}"
			rm -fr ${USER_HOME}/.mozilla/firefox/*/cache* 2>/dev/null
	fi

	if [[ -d ${USER_HOME}/.config/Binance/Partitions/binance.app/Cache/ ]]
		then
			## Binance
			echo -e "${YELLOW}Removing the ${BOLD}Binance ${RESET_COLOR}${YELLOW}cache directory...${RESET_COLOR}"
			rm -fr ${USER_HOME}/.config/Binance/Partitions/binance.app/Cache/* 2>/dev/null
	fi

	if [[ -d ${USER_HOME}/.config/molotov/Cache/ ]]
		then
			## Molotov
			echo -e "${YELLOW}Removing the ${BOLD}Molotov ${RESET_COLOR}${YELLOW}cache directory...${RESET_COLOR}"
			rm -fr ${USER_HOME}/.config/molotov/Cache/* 2>/dev/null
	fi

	if [[ -d ${USER_HOME}/.local/share/TelegramDesktop/tdata/ ]]
		then
			## Telegram
			echo -e "${YELLOW}Removing the ${BOLD}Telegram ${RESET_COLOR}${YELLOW}cache directory...${RESET_COLOR}"
			rm -fr ${USER_HOME}/.local/share/TelegramDesktop/tdata/user*/ 2>/dev/null
	fi

}

function SWAP_SPACE()
{
	sync
	swapoff -av
	swapon -av
}

function CACHED_WRITES()
{
	sync
	echo 3>/proc/sys/vm/drop_caches
}

## Check if root
if [ "$EUID" -ne "0" ]
    then
        echo -e "${RED}This script must be runned as root!${RESET_COLOR}"
        exit 1
	else
		echo -e "${RED}Please close all application currently running! ${RESET_COLOR}"
		read
		echo -e "${YELLOW}Synchronizing cached writes to persistent storage...${RESET_COLOR}"
		CACHE_DIR
		CACHED_WRITES
			if [[ $(swapon --show) == "" ]]
				then
					echo -e "${YELLOW}Swap device not found on this system.${RESET_COLOR}"
				else
					echo -e "${YELLOW}Emptying ${BOLD}swap ${RESET_COLOR}${YELLOW}space...${RESET_COLOR}"
					SWAP_SPACE
			fi
fi
